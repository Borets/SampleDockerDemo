name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Create .env file
      run: |
        echo "NODE_ENV=test" > .env
        echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/app_test" >> .env
        echo "REDIS_URL=redis://localhost:6379" >> .env
        echo "JWT_SECRET=test_jwt_secret" >> .env
        echo "SESSION_SECRET=test_session_secret" >> .env
    
    - name: Run migrations
      run: npm run migrate
          
    - name: Build client
      run: npm run build:client
      
    # Add artificial build time
    - name: Simulate complex build tasks
      run: |
        echo "Running additional build tasks to simulate complexity..."
        mkdir -p temp
        dd if=/dev/urandom of=temp/random_data bs=1M count=100
        shasum temp/random_data
        rm -rf temp
        for i in {1..5}; do
          echo "Running complex build operation: $i/5"
          sleep 5
        done

  build-and-push:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository }}:latest,ghcr.io/${{ github.repository }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max 